{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","phoneInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","Form","className","Row","Col","Control","type","this","id","onChange","placeholder","Button","size","onClick","variant","Component","ContactList","contacts","onDeleteContact","ListGroup","map","Item","key","Filter","filter","InputGroup","Prepend","Text","FormControl","App","addContact","contact","findName","find","cnt","findNumber","length","alert","deleteContact","contactId","prevState","changeFilter","e","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca606dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n//Styles:\r\nimport \"./ContactForm.scss\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  //Переменные\r\n  nameInputId = uuidv4();\r\n  phoneInputId = uuidv4();\r\n  // Функции событий\r\n  handleChange = (event) => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"form\">\r\n        <Row>\r\n          <Col>\r\n            <Form.Control\r\n              className=\"form__item\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              id={this.nameInputId}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Contact name:\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control\r\n              className=\"form__item\"\r\n              type=\"phone\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              id={this.phoneInputId}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Phone number:\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"form__submit\"\r\n          type=\"submit\"\r\n          name=\"contact\"\r\n          onClick={this.handleSubmit}\r\n          variant=\"outline-info\"\r\n        >\r\n          Add Contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n//Styles:\r\nimport \"./ContactList.scss\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ListGroup variant=\"flush\" className=\"contact-list\">\r\n    {contacts.map(({ name, number, id }) => (\r\n      <ListGroup.Item key={id} className=\"contact-list__item\">\r\n        <p className=\"contact-list__text\">\r\n          {name}: {number}\r\n        </p>\r\n        <Button\r\n          className=\"contact-list__button\"\r\n          variant=\"outline-danger\"\r\n          size=\"sm\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListGroup.Item>\r\n    ))}\r\n  </ListGroup>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n//Styles:\r\nimport \"./Filter.scss\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <InputGroup size=\"sm\" className=\"filter-wrapp\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>Find contact:</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n  </InputGroup>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n// ID Generetor:\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  //Функции\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    const { contacts } = this.state;\n    const findName = contacts.find((cnt) => cnt.name === name);\n    const findNumber = contacts.find((cnt) => cnt.number === number);\n    // Проверка на заполненость всех полей формы:\n    if (name.length === 0 || number.length === 0) {\n      alert(\"Please,  fill in all fields\");\n      // Пpоверка на наличие добавляемого контакта в существующем списке:\n    } else if (findName || findNumber) {\n      alert(\"Contact with that name or phone number is already on your list\");\n      // Добавление контакта в список:\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <section className=\"add-contact\">\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n        </section>\n        <section className=\"contacts\">\n          <h2 className=\"title\">Contacts</h2>\n          {this.state.contacts.length > 2 && (\n            <Filter filter={this.state.filter} onChange={this.changeFilter} />\n          )}\n\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </section>\n      </>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}